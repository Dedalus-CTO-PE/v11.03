.***************************************************************************
.* System    :   Patient Billing                                           *
.* Program   :   IBAADT62                                                  *
.* Desc      :   Update invoice pending on hold details                    *
.***************************************************************************
.* Date      :   25/11/2010                                                *
.* Author    :   Ebon Clements                                             *
.* Function  :   Update patient invoice pending on hold details            *
.*           :   for a health fund or claim code                           *
.* Modifications  :                                                        *
.* V11.03.03 09/05/2023 J.Tan           TSK 0911166                        *
.*           Mod to check changes from HF to Claim code hold and vice versa*
.* V11.03.02 09/05/2023 J.Tan            TSK 0911166                       *
.*           Mod to write Delete record to Hold invoice audit file         *
.* V11.03.01 05/04/2023 J.Tan            TSK 0911166                       *
.*           Mod for Hold Invoice Audit                                    *
.* V10.03.02 12/12/2012  J.Tan           CAR 274284                        *
.*           Fixed reseting Holding date                                   *
.* V10.03.01 01/06/2012  J.Tan           CAR 255708                        *
.*           Mods checking for Hold Invoice From date                      *
.* V10.01.00 25/11/2010  Ebon Clements   CAR 234288                        *
.*           Created program                                               *
.***************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       EMRVISFD/INC
          INC       OUTBOAFD/INC
          INC       OUTBB1FD/INC
          INC       OUTSITFD/INC 
          INC       PATCFAFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATVISFD/INC
          INC       PATFN1FD/INC      
          INC       PATFX1FD/INC      
          INC       PATIPEFD/INC      
          INC       PATMI1FD/INC
          INC       PATDSCFD/INC
          INC       PMSVX1FD/INC
          INC       PATFHIFD/INC
          INC       PATONHFD/INC
.
. LOCAL VARIABLE DEFINITION
. -------------------------
CEFFFROM  FORM      1
CNTRDATE  DIM       8
HOLDDATE  DIM       8
CFILEPRE  DIM       3
CLAIMCOD  DIM       3
CODE      DIM       2
DIM3      DIM       3
DIM6      DIM       6
DIM8      DIM       8
ECOL1     FORM      2
HLTHFUND  DIM       6 
REASHOLD  DIM       3
ZERO8     INIT      "0000    "
.
PRGID     INIT      "IBAADT62"
PRGNAM    INIT      "Update Invoice Pending Details"
VERSION   INIT      "V11.03.03"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
.
          BRANCH    COPTION,ML1000,ML2000  * proceed with clean up
.
ML1000    CALL      KFND0000               * keyin health fund
          BRANCH    EXIT,ML0100
.
          CALL      KREA0000               * Keyin reason for hold
          BRANCH    EXIT,ML0100,ML0100
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,ML1100:          * yes
                          ML0100:          * no
                          ML0100           * cancel
.
ML1100    CALL      HPEN0000               * health fund invoice pending update
          GOTO      ML9999
.
ML2000    CALL      KCLM0000               * keyin claim code 
          BRANCH    EXIT,ML0100
.
          CALL      KREA0000               * Keyin reason for hold
          BRANCH    EXIT,ML0100
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,ML2100:          * yes
                          ML0100:          * no
                          ML0100           * cancel
.
ML2100    CALL      CPEN0000               * Claim code invoice pending update
          GOTO      ML9999
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P64:24,"patcodes"
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patcfaaf"
          OPEN      PATCFAA1,"patcfaaf"
.
          DISPLAY   *P64:24,"patipenf"
          OPEN      PATIPEN1,"patipenf"
.
          DISPLAY   *P64:24,"patfn1af"
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"patfx1af"
          OPEN      PATFX1A1,"patfx1af"
.
          DISPLAY   *P64:24,"patmi1af"
          OPEN      PATMI1A1,"patmi1af"
.
          DISPLAY   *P64:24,"pmsvx1af"
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"patvisaf"
          OPEN      PATVISA1,"patvisaf"
.
          DISPLAY   *P64:24,"emrvisaf"
          OPEN      EMRVISA1,"emrvisaf"
.
          DISPLAY   *P64:24,"outsitaf"
          OPEN      OUTSITA1,"outsitaf"
.
          DISPLAY   *P64:24,"patdschf"
          OPEN      PATDSCH1,"patdschf"
.
          OPEN      PATONHA1,"patonhaf"
.
          MOVE      "out",CFILEPRE          * Save Current File Prefix
          CALL      OPNOUT00                * Open Outpatient Files
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,TEN9;*212,CFEETYP
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run clean up                           *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Update Health Fund Invoice ":
                                           "Pending":
                    *P1:6,*V2LON,TWO,*HOFF,". Update Claim Code Invoice ":
                                           "Pending"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000,OPTN9000    * run clean-up
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.******************************************************************************
.* Keyin Health fund                                                          *
.******************************************************************************
KFND0000  MOVE      SP6,HLTHFUND
          MOVE      "9",EVERT
          MOVE      "24",ECOL
          MOVE      "33",ECOL1
.
          MOVE      ONE,CKYIMAND
          MOVE      ONE,CKYINACT
          MOVE      SP20,HLTHFUND
          PACK      HCODE,SP20
.
          DISPLAY   *P1:EVERT,"Health Fund          : "
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      PATFNDKY
.
          PACK      HLTHFUND,HCODE,SP10
.
          BRANCH    EXIT,KFND9200:          * Nothing entered
                         KFND9999           * Exitchar entered
.
KFND9200  DISPLAY   *PECOL1:EVERT,*V2LON,HFNAME;
KFND9999  RETURN
+
.******************************************************************************
.* Keyin the reason for hold invoice                                          *
.******************************************************************************
KREA0000  MOVE      "10",EVERT
          MOVE      "24",ECOL               * keyin position
          MOVE      "33",ECOL1              * Display description position
.
          MOVE      SP3,ACODE
          MOVE      SP3,REASHOLD
          MOVE      "rh",CODE
          MOVE      ZERO,CKYIMAND
          DISPLAY   *P1:EVERT,"Reason for Hold Inv  : "
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      PATCODKY                * keyin code
          BRANCH    EXIT,KREA1000,KREA9999  * Nothing,exit entered
          PACK      REASHOLD,ACODE,SP70
.
KREA1000  DISPLAY   *PECOL1:EVERT,*EL,*V2LON,TDESC;
          MOVE      ZERO,EXIT
.
KREA9999  RETURN
+
.******************************************************************************
.* Keyin the claim code                                                       *
.******************************************************************************
KCLM0000  MOVE      "9",EVERT
          MOVE      "24",ECOL               * keyin position
          MOVE      "33",ECOL1              * Display description position
.
          MOVE      SP3,ACODE
          MOVE      "CL",CODE
          MOVE      ONE,CKYIMAND
          DISPLAY   *P1:EVERT,"Claim Code           : "
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      PATCODKY                * keyin code
          BRANCH    EXIT,KCLM1000,KCLM9999  * Nothing,exit entered
          PACK      CLAIMCOD,ACODE,SP70
.
KCLM1000  DISPLAY   *PECOL1:EVERT,*EL,*V2LON,TDESC;
.
KCLM9999  RETURN
+
.**************************************************************************
.* Update invoice pending for a health fund                               *
.**************************************************************************
HPEN0000  PACK      KEY14,HLTHFUND,ZERO8
          CALL      RDFUND1                      * Read health fund
          BRANCH    OVRCD,HPEN9999
.
          PACK      KEY6,HCODE,SP70
          CALL      RDPTFX11                     * Read health fund
          BRANCH    OVRCD,HPEN9999
.
          MOVE      ZERO,OVRCD               * assume file exists
          TRAP      OVERCOND IF IO           * trap for error openning file
          OPEN      PATFHIA3,"patfhiaf"      * open HF On Hold Invoice file
          TRAPCLR   IO
          BRANCH    OVRCD,HPEN0400
.
          PACK      KEY11,HCODE,SP70
          CALL      RSPTFHI3
          CALL      RKPTFHI3
          BRANCH    OVRCD,HPEN0400
.
          MATCH     HCODE,PTFHHFND
          GOTO      HPEN0400 IF NOT EQUAL
.
          MOVE      PTFHHREA,PTFXRHCD        * reason for Hold invoice
          MOVE      PTFHDESC,PTFXRHFT
          MOVE      PTFHHDAT,PTFXHDAT        * Hold invoice date
.
HPEN0400  MOVE      ZERO,CEFFFROM                * Contract Effective from
          MOVE      PTFXCEFR,CEFFFROM            * Contract Effective From
          MOVE      SP70,CNTRDATE
          MOVE      PTFXHDAT,HOLDDATE            * Holding invoice date
.
          MOVE      SP70,KEY9
          PACK      KEY8,SP70
          CALL      RDSIPEN1
HPEN1000  CALL      RDKIPEN1
          BRANCH    OVRCD,HPEN9999
.
          MOVE      ZERO,CEFFFROM                * Contract Effective from
          MOVE      PTFXCEFR,CEFFFROM            * Contract Effective From
          MOVE      PTFXHDAT,HOLDDATE            * Holding invoice date
.
          PACK      KEY83,PTIPRHLD,PTIPRDES,SP70 * save original reason for hold
          MOVE      SP70,KEY80
.
          PACK      KEY9,SP3,HLTHFUND,SP70
          MATCH     SP70,PTIPRHLD                * Not currently on hold
          GOTO      HPEN1200 IF EQUAL
.
          MATCH     REASHOLD,PTIPRHLD            * Check old reason for hold inv
          GOTO      HPEN1000 IF NOT EQUAL
.
          PACK      KEY80,PTIPRDES,SP70
.
HPEN1200  PACK      KEY8,IPADMNO,SP70
          CALL      RDPTVIS1
          BRANCH    OVRCD,HPEN3000               * Check if OP Booking
.
          BRANCH    PVITYPE,HPEN2000,HPEN3000,HPEN4000
          GOTO      HPEN3000                     * Check if OP booking
.
HPEN2000  PACK      KEY8,IPADMNO,SP70
          CALL      RDEMVIS1                     * EMR Visit
          BRANCH    OVRCD,HPEN1000
.
          MATCH     HLTHFUND,EMVIFUND            * Check health fund
          GOTO      HPEN1000 IF NOT EQUAL
.
          CALL      CEMR0000                     * Check the Effective date
          BRANCH    EXIT,HPEN2200                * Invoice on hold
.
          UNPACK    SP70,PTIPRHLD,PTIPRDES       * Invoice not on Hold
          GOTO      HPEN7000
.
HPEN2200  MOVE      PTFXRHCD,PTIPRHLD            * Set new reason for hold
          MOVE      PTFXRHFT,PTIPRDES            * Set new reason free text
          GOTO      HPEN7000
.
HPEN3000  MOVE      IPSITE,KEY6
          CALL      RDSITA1
          BRANCH    OVRCD,HPEN1000           * error invalid site code
.
          MATCH     OSTFILE,CFILEPRE         * Save Current File Prefix
          IF        !@EQUAL
            MOVE      OSTFILE,CFILEPRE       * Save Current File Prefix
            CALL      OPNOUT00               * Open prefixed Outpatient Files
          ENDIF
.
          PACK      KEY8,IPADMNO,SP70
          CALL      RDBOKB1                      * OP Visit   
          BRANCH    OVRCD,HPEN1000
.
          MATCH     HLTHFUND,OTBBFUND            * Check health fund
          GOTO      HPEN1000 IF NOT EQUAL
.
          CALL      COUT0000                     * Check the Effective date
          BRANCH    EXIT,HPEN3200                * Invoice on hold
.
          UNPACK    SP70,PTIPRHLD,PTIPRDES       * Invoice not on Hold
          GOTO      HPEN7000
.
HPEN3200  MOVE      PTFXRHCD,PTIPRHLD            * Set new reason for hold
          MOVE      PTFXRHFT,PTIPRDES            * Set new reason free text
          GOTO      HPEN7000
.
HPEN4000  PACK      KEY8,IPADMNO,SP70
          CALL      RDPTMIS1                     * IP Admission
          BRANCH    OVRCD,HPEN1000
.
          MATCH     HLTHFUND,AFUNDH              * Check health fund
          GOTO      HPEN1000 IF NOT EQUAL
.
          CALL      CINP0000                     * Check the Effective date
          BRANCH    EXIT,HPEN4200                * Invoice on hold
.
          UNPACK    SP70,PTIPRHLD,PTIPRDES       * Invoice not on Hold
          GOTO      HPEN7000
.
HPEN4200  MOVE      PTFXRHCD,PTIPRHLD            * Set new reason for hold
          MOVE      PTFXRHFT,PTIPRDES            * Set new reason free text
          GOTO      HPEN7000
.
HPEN7000  MATCH     SP70,PTIPRHLD                * Already on hold
          GOTO      HPEN8000 IF NOT EQUAL
.
          MOVE      SP70,DIM3
          LOAD      DIM3,PVITYPE,EMVICOMP,OBACOMP,ACLAIM
.
          MATCH     SP70,DIM3                   * Claim code blank
          GOTO      HPEN8000 IF EQUAL
.
          PACK      KEY9,DIM3,SP70
          PACK      KEY5,ANSC,ANSL,DIM3,SP70
          CALL      RDCODE1                      * Read claim code
          BRANCH    OVRCD,HPEN8000
.
          PACK      KEY3,ACODE,SP70
          CALL      RDPTCFA1                     * Check if claim code is 
          BRANCH    OVRCD,HPEN8000               * on hold
.
          MOVE      ZERO,CEFFFROM                * Contract Effective from
          MOVE      PTCFCEFR,CEFFFROM            * Contract Effective From
          MOVE      SP70,CNTRDATE
          MOVE      PTCFHDAT,HOLDDATE            * Holding invoice date
.
          PERFORM   PVITYPE,CEMR0000,COUT0000,CINP0000
          BRANCH    EXIT,HPEN7200
.
          UNPACK    SP70,PTIPRHLD,PTIPRDES       * Invoice not on Hold
          GOTO      HPEN8000
.
HPEN7200  MOVE      PTCFRHCD,PTIPRHLD            * Set new reason for hold
          MOVE      PTCFRHFT,PTIPRDES            * Set new reason free text
.
HPEN8000  CALL      UPIPEN1
.
          MOVE      SP70,KEY3
          CALL      HAUD0000                     * hold invoice audit 
.
          GOTO      HPEN1000
.
HPEN9999  RETURN
+
.**************************************************************************
.* Update invoice pending for a claim code                                *
.**************************************************************************
CPEN0000  PACK      KEY5,ANSC,ANSL,CLAIMCOD,SP70
          CALL      RDCODE1                      * Read admission claim code
          BRANCH    OVRCD,CPEN9999
.
          PACK      KEY3,ACODE,SP70
          CALL      RDPTCFA1                     * Check if claim code is
          BRANCH    OVRCD,CPEN9999               * on hold
.
          MOVE      ZERO,CEFFFROM                * Contract Effective from
          MOVE      PTCFCEFR,CEFFFROM            * Contract Effective From
          MOVE      SP70,CNTRDATE
          MOVE      PTCFHDAT,HOLDDATE            * Holding invoice date
.
          PACK      KEY8,SP70
          CALL      RDSIPEN1
CPEN1000  CALL      RDKIPEN1
          BRANCH    OVRCD,CPEN9999
.
          MOVE      ZERO,CEFFFROM                * Contract Effective from
          MOVE      PTCFCEFR,CEFFFROM            * Contract Effective From
          MOVE      PTCFHDAT,HOLDDATE            * Holding invoice date
          PACK      KEY83,PTIPRHLD,PTIPRDES,SP70 * save original reason for hold
          MOVE      SP70,KEY80
.
          MATCH     SP70,PTIPRHLD                * Not currently on hold
          GOTO      CPEN1200 IF EQUAL
.
          MATCH     REASHOLD,PTIPRHLD            * Check old reason for hold inv
          GOTO      CPEN1000 IF NOT EQUAL
.
          PACK      KEY80,PTIPRDES,SP70
.
CPEN1200  PACK      KEY8,IPADMNO,SP70
          CALL      RDPTVIS1
          BRANCH    OVRCD,CPEN3000               * Check if OP Booking
.
          BRANCH    PVITYPE,CPEN2000,CPEN3000,CPEN4000
          GOTO      CPEN3000                     * Check if OP booking
.
CPEN2000  PACK      KEY8,IPADMNO,SP70
          CALL      RDEMVIS1                     * EMR Visit
          BRANCH    OVRCD,CPEN1000
.
          MATCH     CLAIMCOD,EMVICOMP            * Check health fund
          GOTO      CPEN1000 IF NOT EQUAL
.
          CALL      CEMR0000                     * Check the Effective date
          BRANCH    EXIT,CPEN2200                * Invoice on hold
.
          UNPACK    SP70,PTIPRHLD,PTIPRDES       * Invoice not on Hold
          GOTO      CPEN7000
.
CPEN2200  MOVE      PTCFRHCD,PTIPRHLD            * Set new reason for hold
          MOVE      PTCFRHFT,PTIPRDES            * Set new reason free text
          GOTO      CPEN7000
.
CPEN3000  MOVE      IPSITE,KEY6
          CALL      RDSITA1
          BRANCH    OVRCD,CPEN1000           * error invalid site code
.
          MATCH     OSTFILE,CFILEPRE         * Save Current File Prefix
          IF        !@EQUAL
            MOVE      OSTFILE,CFILEPRE       * Save Current File Prefix
            CALL      OPNOUT00               * Open prefixed Outpatient Files
          ENDIF
.
          PACK      KEY8,IPADMNO,SP70
          CALL      RDBOKB1                      * OP Visit
          BRANCH    OVRCD,CPEN1000
.
          MATCH     CLAIMCOD,OBACOMP            * Check health fund
          GOTO      CPEN1000 IF NOT EQUAL
.
          CALL      COUT0000                     * Check the Effective date
          BRANCH    EXIT,CPEN3200                * Invoice on hold
.
          UNPACK    SP70,PTIPRHLD,PTIPRDES       * Invoice not on Hold
          GOTO      CPEN7000
.
CPEN3200  MOVE      PTCFRHCD,PTIPRHLD            * Set new reason for hold
          MOVE      PTCFRHFT,PTIPRDES            * Set new reason free text
          GOTO      CPEN7000
.
CPEN4000  PACK      KEY8,IPADMNO,SP70
          CALL      RDPTMIS1                     * IP Admission
          BRANCH    OVRCD,CPEN1000
.
          MATCH     CLAIMCOD,ACLAIM              * Check health fund
          GOTO      CPEN1000 IF NOT EQUAL
.
          CALL      CINP0000                     * Check the Effective date
          BRANCH    EXIT,CPEN4200                * Invoice on hold
.
          UNPACK    SP70,PTIPRHLD,PTIPRDES       * Invoice not on Hold
          GOTO      CPEN7000
.
CPEN4200  MOVE      PTCFRHCD,PTIPRHLD            * Set new reason for hold
          MOVE      PTCFRHFT,PTIPRDES            * Set new reason free text
          GOTO      CPEN7000
.
CPEN7000  MATCH     SP70,PTIPRHLD                * Already on hold
          GOTO      CPEN8000 IF NOT EQUAL
.
          MOVE      SP70,DIM6
          LOAD      DIM6,PVITYPE,EMVIFUND,OTBBFUND,AFUNDH
.
          PACK      KEY14,DIM6,ZERO8
          CALL      RDFUND1                      * Read health fund
          BRANCH    OVRCD,CPEN8000
.
          PACK      KEY6,HCODE,SP70
          CALL      RDPTFX11                     * Read health fund
          BRANCH    OVRCD,CPEN8000
.
          MOVE      ZERO,CEFFFROM                * Contract Effective from
          MOVE      PTFXCEFR,CEFFFROM            * Contract Effective From
          MOVE      SP70,CNTRDATE
          MOVE      PTFXHDAT,HOLDDATE            * Holding invoice date
.
          PERFORM   PVITYPE,CEMR0000,COUT0000,CINP0000
          BRANCH    EXIT,CPEN7200
.
          UNPACK    SP70,PTIPRHLD,PTIPRDES       * Invoice not on Hold
          GOTO      CPEN8000
.
CPEN7200  MOVE      PTFXRHCD,PTIPRHLD            * Set new reason for hold
          MOVE      PTFXRHFT,PTIPRDES            * Set new reason free text
.
CPEN8000  PACK      KEY9,CLAIMCOD,SP70           * Claim code
          CALL      HAUD0000                     * hold invoice audit 
.
          CALL      UPIPEN1
          GOTO      CPEN1000
.
CPEN9999  RETURN
+
.************************************************************************
.         Hold invoice audit file
.************************************************************************
HAUD0000  MOVE      SP70,KEY1
          MATCH     REASHOLD,PTIPRHLD
          IF        @EQUAL
            MATCH     KEY80,PTIPRDES         * checking hold invoice desc.
            GOTO      HAUD9999 IF EQUAL      * both same, no change
          ENDIF
.
          MATCH     SP70,REASHOLD                * check original code
          IF        @EQUAL
            MATCH     SP70,PTIPRHLD
            IF        !@EQUAL
              IF        COPTION=2
                MOVE      "C",KEY1               * Add from NOT Hold to Hold
              ELSE
                MOVE      "F",KEY1               * Add from NOT Hold to Hold
              ENDIF
            ENDIF
          ELSE
            MATCH     SP70,PTIPRHLD
            IF        @EQUAL
              MOVE      "D",KEY1 
              MATCH     SP70,KEY83
              GOTO      HAUD9999 IF EQUAL
            ELSE
              MOVE      KEY9,D9
              CALL      THOL0000            * Check if deletion record required
              MOVE      D9,KEY9
              MOVE      "U",KEY1            * Update
            ENDIF
          ENDIF
          CALL      WHAU0000                * write to Hold inv.audit file

HAUD9999  RETURN
+
.****************************************************************************
.         Check if changes from Health fund to Claim code hold or vice versa
.****************************************************************************
THOL0000  PACK      KEY24,IPADMNO,Z70  * check if there is record in audit
          CALL      RSPTONH1
          CALL      RPPTONH1
          BRANCH    OVRCD,THOL9999
.
          MATCH     DIPADMNO,PTONVISN
          GOTO      THOL9999 IF NOT EQUAL
.
          PACK      KEY9,PTONCLCD,PTONHLFU,SP70
          MATCH     SP70,KEY9
          GOTO      THOL9999 IF EQUAL
.
          UNPACK    D9,D3,D6           * claim code/health fund
          MATCH     D3,PTONCLCD
          GOTO      THOL2000 IF NOT EQUAL
          MATCH     D6,PTONHLFU
          GOTO      THOL9999 IF EQUAL
.
THOL2000  MOVE      "D",KEY1
          CALL      WHAU0000             * write to audit file
.
THOL9999  RETURN
+
.****************************************************************************
.         Write to Audit if reason for hold has changed
.****************************************************************************
WHAU0000  MATCH     "D",KEY1
          GOTO      WHAU4000 IF NOT EQUAL
.
.         if this is a deleted hold invoice record and no existing record in
.         audit file, then blank out Health fund and Claim code
.
          PACK      KEY24,IPADMNO,Z70      * check if there is record in audit
          CALL      RSPTONH1
          CALL      RPPTONH1
          BRANCH    OVRCD,WHAU2000
.
          MATCH     DIPADMNO,PTONVISN
          GOTO      WHAU2000 IF NOT EQUAL
.
          PACK      KEY9,PTONCLCD,PTONHLFU   * Claim code and Health fund
          MOVE      PTONHLIN,HOLDDATE        * hold invoice from date
          GOTO      WHAU4000
.
WHAU2000  MOVE      SP70,KEY9
          UNPACK    KEY83,PTONREAH,PTONDESC  * restore the original reason
          GOTO      WHAU9999
.
WHAU4000  CALL      IBACLOCK
          PACK      PTONTDAT,CCC,CYY,CMM,CDD
          REP       " 0",PTONTDAT
          MOVE      CTIMEIS,PTONTTIM
.
          PACK      KEY24,IPADMNO,PTONTDAT,PTONTTIM,SP70
          CALL      RAPTONH1
          COMPARE   ZERO,OVRCD
          GOTO      WHAU4000 IF EQUAL
.
          MOVE      IPADMNO,PTONVISN         * Admission no
          MOVE      IPSYSTM,FORM2
          MOVE      FORM2,PTONVAVL           * System indicator
          MOVE      SP70,PTONURID            * user id
.
          MOVE      KEY1,PTONHACT            * Action
          MATCH     "D",KEY1                 * Delete-Changed Hold to NOT Hold
          IF        !@EQUAL
            MOVE      PTIPRHLD,PTONREAH      * reason for hold code
            MOVE      PTIPRDES,PTONDESC      * reason for hold free text
          ENDIF
.
          UNPACK    KEY9,PTONCLCD,PTONHLFU   * Claim code & health fund
          MOVE      HOLDDATE,PTONHLIN        * hold invoice from
          PACK      PTONSPAR,SP70,SP70
.
          CALL      WRPTONH1
.
WHAU9999  RETURN
+
.************************************************************************
.         Check Effective Holding Invoice for Emergency
.************************************************************************
CEMR0000  MOVE      ZERO,EXIT
          MATCH     SP70,HOLDDATE
          GOTO      CEMR9999 IF EQUAL      * No holding date
.
          MOVE      EMVIDATE,CNTRDATE
          MOVE      SP70,DIM8
          IF        EMVISTAT=3
            MOVE      EMVIDDAT,DIM8
            MOVE      EMVIDDAT,CNTRDATE
          ENDIF
          LOAD      CNTRDATE,CEFFFROM,EMVIDATE,DIM8
          CALL      CHKDAT00               * Check Holding date
          GOTO      CEMR9999
.
CEMR9000  MOVE      ONE,EXIT
CEMR9999  RETURN
+
.************************************************************************
.         Check Effective Holding Invoice for Outpatient 
.************************************************************************
COUT0000  MOVE      ZERO,EXIT
          MATCH     SP70,HOLDDATE
          GOTO      COUT9999 IF EQUAL   * No holding date
.
          MOVE      OBADATE,CNTRDATE    * Outpatient Visit date
          CALL      CHKDAT00            * Check Holding date
          GOTO      COUT9999
.
COUT9000  MOVE      ONE,EXIT
COUT9999  RETURN
+
.************************************************************************
.         Check Effective Holding Invoice for Inpatient 
.************************************************************************
CINP0000  MOVE      ZERO,EXIT
          MATCH     SP70,HOLDDATE
          GOTO      CINP9999 IF EQUAL   * No holding date
.
          PACK      CNTRDATE,CCC,CYY,CMM,CDD,SP70  * set As at date to Current
          MOVE      SP70,DIM8
          IF        ASTAT=3
            CALL      RDDSCH1
            IF        OVRCD=0
              MOVE      DDATE,DIM8
              MOVE      DDATE,CNTRDATE   * set to disch.date
            ENDIF
          ENDIF
          LOAD      CNTRDATE,CEFFFROM,ADATE,DIM8
          CALL      CHKDAT00             * Check Holding date
          GOTO      CINP9999
.
CINP9000  MOVE      ONE,EXIT
CINP9999  RETURN
+
.************************************************************************
.         Check Holding invoice From date
.         EXIT=0 Invoice NOT on hold, EXIT=1 Invoice on hold
.************************************************************************
CHKDAT00  MOVE      ZERO,EXIT
          MATCH     SP70,CNTRDATE
          GOTO      CHKDAT99 IF EQUAL
.
          REP       " 0",CNTRDATE
          MATCH     HOLDDATE,CNTRDATE
          GOTO      CHKDAT99 IF LESS    * prior Holding invoice From date
          MOVE      ONE,EXIT            * invoice on hold
CHKDAT99  RETURN
+
.************************************************************************
.                    Open Outpateint Files
.************************************************************************
OPNOUT00  PACK      CFNAME,CFILEPRE,FILBB1A1  * Set up physical filename
          CLOSE     OUTBB1A1
          OPEN      OUTBB1A1,CFNAME
.
OPNOUT99  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       PATCODKY
          INC       PATFNDKY
.
          INC       EMRVISIO/INC
          INC       OUTBOAIO/INC
          INC       OUTBB1IO/INC
          INC       OUTSITIO/INC
          INC       PATCFAIO/INC
          INC       PATCODIO/INC
          INC       PATVISIO/INC
          INC       PATFN1IO/INC      
          INC       PATFX1IO/INC      
          INC       PATIPEIO/INC      
          INC       PATMI1IO/INC
          INC       PATDSCIO/INC
          INC       PMSVX1IO/INC
          INC       PATFHIIO/INC
          INC       PATONHIO/INC
